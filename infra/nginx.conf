# /etc/nginx/sites-available/tarang.ritik.dev.conf

# HTTP - redirect all requests to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name tarang.ritik.dev;

    # Required for Let's Encrypt domain verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS - Serve static frontend, proxy WebSocket
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tarang.ritik.dev;

    # SSL configuration 
    ssl_certificate /etc/letsencrypt/live/tarang.ritik.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tarang.ritik.dev/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/tarang.ritik.dev/chain.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security "max-age=31536000" always;


    # Root directory where your built frontend assets (from Vite's 'dist' folder) are located
    # !!! REPLACE '/path/to/your/frontend/build/output' WITH THE ACTUAL PATH !!!
    # Example: /var/www/tarang.ritik.dev/html or /usr/share/nginx/html/tarang-frontend
    root /var/www/tarang.ritik.dev/html;

    # Default file to serve
    index index.html index.htm;

    # Main location block for serving the frontend
    location / {
        # Try to serve file directly, fallback for SPA routing
        try_files $uri $uri/ /index.html;
    }


    # Proxy settings for WebSocket endpoint
    # location /ws {
    #     proxy_pass http://localhost:8765;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
        
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;

    #     # Keep WebSocket timeouts and buffering settings
    #     proxy_read_timeout 86400;
    #     proxy_send_timeout 86400;
    #     proxy_buffering off;
    # }
